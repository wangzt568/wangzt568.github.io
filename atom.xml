<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZetianNotes</title>
  
  
  <link href="http://wangzt568.github.io/atom.xml" rel="self"/>
  
  <link href="http://wangzt568.github.io/"/>
  <updated>2021-02-15T02:04:57.712Z</updated>
  <id>http://wangzt568.github.io/</id>
  
  <author>
    <name>Wang,Zetian</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Multi-threading-Concepts</title>
    <link href="http://wangzt568.github.io/2021/02/14/Multi-threading-Concepts/"/>
    <id>http://wangzt568.github.io/2021/02/14/Multi-threading-Concepts/</id>
    <published>2021-02-15T02:04:15.000Z</published>
    <updated>2021-02-15T02:04:57.712Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Semaphores"><a href="#Semaphores" class="headerlink" title="Semaphores"></a>Semaphores</h1><ul><li>Invented by Dijkstra back in 1962</li><li>semaphores are simple variables(or abstract data types) that are used for controlling access to a common resource.</li></ul><p><strong><em>It is a record of how many units of particular resource are available, we have to wait until a unit of the resource becomes available again.</em></strong></p><hr><ul><li>Counting semaphores:  allows an arbitrary resource count</li></ul><hr><ul><li>Binary semaphores:  semaphores that are restricted to the values 0 and 1</li></ul><hr><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage:"></a>Usage:</h3><pre><code>1. semaphores tracks only how many resources are free - it does not keep track of which of the resources are free.2. the semaphore count may serve as a useful trigger for a number of different actions(web servers)3. producer-consumer problem can be solved and implemented with the help of semaphores.</code></pre><h3 id="Mutexes-Mutual-Exclusion-Objects"><a href="#Mutexes-Mutual-Exclusion-Objects" class="headerlink" title="Mutexes(Mutual Exclusion Objects)"></a>Mutexes(Mutual Exclusion Objects)</h3><ul><li>To prevent race conditions</li><li>mutex is very similar to a binary semaphore, while binary semaphore can be used as mutex, a mutex is a more specific use-case.</li><li>a Lock is designed to enforce a mutual exclusion concurrency control policy.</li></ul><h3 id="Differences-between-mutex-and-semaphore"><a href="#Differences-between-mutex-and-semaphore" class="headerlink" title="Differences between mutex and semaphore"></a>Differences between mutex and semaphore</h3><p><strong>SEMAPHORE</strong></p><ul><li>signalling mechanism, threads and process perform wait() and notify() operations to indicate whether they are acquiring or releasing the resource.</li><li>allows multiple program threads to access the finite instance of resources(not just a single resource)</li><li>the process or thread blocks itself if no resource if free till the count of semaphore become greater than 0.</li></ul><p><strong>MUTEX</strong></p><ul><li>locking mechanism, threads or processes have to acquire the lock on mutex object if it wants to acquire the resource.</li><li>mutex allows multiple program threads to access a single shared resource but one at a time.</li><li>if the lock is already acquired by another thread or process then the thread will wait until the mutex object gets unlocked.</li></ul><h2 id="SemaphoreExample"><a href="#SemaphoreExample" class="headerlink" title="SemaphoreExample"></a>SemaphoreExample</h2><blockquote><p>Only 3 threads can access the resource at one time cause there is only 3 permits in Semaphore.</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ExecutorService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Semaphore</span><span class="token punctuation">;</span><span class="token keyword">enum</span> <span class="token class-name">DownLoader</span><span class="token punctuation">&#123;</span>    INSTANCE<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Semaphore</span> semaphore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downLoadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            semaphore<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">downLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span><span class="token punctuation">&#123;</span>            semaphore<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">downLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"DownLoading data........"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Multithreading</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token punctuation">&#123;</span>                <span class="token class-name">DownLoader</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">.</span><span class="token function">downLoadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Semaphores&quot;&gt;&lt;a href=&quot;#Semaphores&quot; class=&quot;headerlink&quot; title=&quot;Semaphores&quot;&gt;&lt;/a&gt;Semaphores&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Invented by Dijkstra back in 196</summary>
      
    
    
    
    <category term="Multi-threading" scheme="http://wangzt568.github.io/categories/Multi-threading/"/>
    
    
  </entry>
  
  <entry>
    <title>Enums</title>
    <link href="http://wangzt568.github.io/2021/02/14/Enums-1/"/>
    <id>http://wangzt568.github.io/2021/02/14/Enums-1/</id>
    <published>2021-02-15T01:47:55.000Z</published>
    <updated>2021-02-15T01:48:23.769Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Enums"><a href="#Enums" class="headerlink" title="Enums"></a>Enums</h1><h2 id="Enums-概念"><a href="#Enums-概念" class="headerlink" title="Enums 概念"></a>Enums 概念</h2><blockquote><p>An enum type is a special data type that enables for a variable to be a set of predefined constants. The variable must be equal to one of the values that have been predefined for it. Common examples include compass directions (values of NORTH, SOUTH, EAST, and WEST) and the days of the week.</p></blockquote><p>Because they are constants, the names of an enum type’s fields are in uppercase letters.<br>In the Java programming language, you define an enum type by using the enum keyword. For example, you would specify a days-of-the-week enum type as:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Day</span> <span class="token punctuation">&#123;</span>SUNDAY<span class="token punctuation">,</span> MONDAY<span class="token punctuation">,</span> TUESDAY<span class="token punctuation">,</span> WEDNESDAY<span class="token punctuation">,</span>THURSDAY<span class="token punctuation">,</span> FRIDAY<span class="token punctuation">,</span> SATURDAY<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>You should use enum types any time you need to represent a fixed set of constants. That includes natural enum types such as the planets in our solar system and data sets where you know all possible values at compile time—for example, the choices on a menu, command line flags, and so on.</p><p>Here is some code that shows you how to use the Day enum defined above:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EnumTest</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Day</span> day<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">EnumTest</span><span class="token punctuation">(</span><span class="token class-name">Day</span> day<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>day <span class="token operator">=</span> day<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">tellItLikeItIs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>day<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> MONDAY<span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Mondays are bad."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> FRIDAY<span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Fridays are better."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> SATURDAY<span class="token operator">:</span> <span class="token keyword">case</span> SUNDAY<span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Weekends are best."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Midweek days are so-so."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span>\<span class="token punctuation">[</span>\<span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">EnumTest</span> firstDay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EnumTest</span><span class="token punctuation">(</span><span class="token class-name">Day</span><span class="token punctuation">.</span>MONDAY<span class="token punctuation">)</span><span class="token punctuation">;</span>        firstDay<span class="token punctuation">.</span><span class="token function">tellItLikeItIs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">EnumTest</span> thirdDay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EnumTest</span><span class="token punctuation">(</span><span class="token class-name">Day</span><span class="token punctuation">.</span>WEDNESDAY<span class="token punctuation">)</span><span class="token punctuation">;</span>        thirdDay<span class="token punctuation">.</span><span class="token function">tellItLikeItIs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">EnumTest</span> fifthDay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EnumTest</span><span class="token punctuation">(</span><span class="token class-name">Day</span><span class="token punctuation">.</span>FRIDAY<span class="token punctuation">)</span><span class="token punctuation">;</span>        fifthDay<span class="token punctuation">.</span><span class="token function">tellItLikeItIs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">EnumTest</span> sixthDay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EnumTest</span><span class="token punctuation">(</span><span class="token class-name">Day</span><span class="token punctuation">.</span>SATURDAY<span class="token punctuation">)</span><span class="token punctuation">;</span>        sixthDay<span class="token punctuation">.</span><span class="token function">tellItLikeItIs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">EnumTest</span> seventhDay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EnumTest</span><span class="token punctuation">(</span><span class="token class-name">Day</span><span class="token punctuation">.</span>SUNDAY<span class="token punctuation">)</span><span class="token punctuation">;</span>        seventhDay<span class="token punctuation">.</span><span class="token function">tellItLikeItIs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//The output is:</span>  <span class="token class-name">Mondays</span> are <span class="token class-name"><span class="token namespace">bad<span class="token punctuation">.</span></span>Midweek</span> days are so<span class="token operator">-</span><span class="token class-name"><span class="token namespace">so<span class="token punctuation">.</span></span>Fridays</span> are <span class="token class-name"><span class="token namespace">better<span class="token punctuation">.</span></span>Weekends</span> are <span class="token class-name"><span class="token namespace">best<span class="token punctuation">.</span></span>Weekends</span> are best<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Java programming language enum types are much more powerful than their counterparts in other languages. The enum declaration defines a class (called an enum type). The enum class body can include methods and other fields. The compiler automatically adds some special methods when it creates an enum. For example, they have <strong>a static values method</strong> that returns an array containing all of the values of the enum in the order they are declared. This method is commonly used in combination with the for-each construct to iterate over the values of an enum type. For example, this code from the Planet class example below iterates over all the planets in the solar system.</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Planet</span> p <span class="token operator">:</span> <span class="token class-name">Planet</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Your weight on %s is %f%n"</span><span class="token punctuation">,</span>p<span class="token punctuation">,</span> p<span class="token punctuation">.</span><span class="token function">surfaceWeight</span><span class="token punctuation">(</span>mass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Note:</strong> <em>All</em> enums implicitly extend java.lang.Enum. Because a class can only extend one parent (see <a class="link"   href="https://docs.oracle.com/javase/tutorial/java/javaOO/classdecl.html" >Declaring Classes<i class="fas fa-external-link-alt"></i></a>), the Java language does not support multiple inheritance of state (see <a class="link"   href="https://docs.oracle.com/javase/tutorial/java/IandI/multipleinheritance.html" >Multiple Inheritance of State, Implementation, and Type<i class="fas fa-external-link-alt"></i></a>), and therefore an enum cannot extend anything else.</p><p>In the following example, Planet is an enum type that represents the planets in the solar system. They are defined with constant mass and radius properties.</p><p>Each enum constant is declared with values for the mass and radius parameters. These values are passed to the constructor when the constant is created. Java requires that the constants be defined first, prior to any fields or methods. Also, when there are fields and methods, the list of enum constants must end with a semicolon.</p><hr><p>Note: The constructor for an enum type must be package-private or private access. It automatically creates the constants that are defined at the beginning of the enum body. You cannot invoke an enum constructor yourself.</p><hr><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Planet</span> <span class="token punctuation">&#123;</span>     MERCURY <span class="token punctuation">(</span><span class="token number">3.303e+23</span><span class="token punctuation">,</span> <span class="token number">2.4397e6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     VENUS   <span class="token punctuation">(</span><span class="token number">4.869e+24</span><span class="token punctuation">,</span> <span class="token number">6.0518e6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     EARTH   <span class="token punctuation">(</span><span class="token number">5.976e+24</span><span class="token punctuation">,</span> <span class="token number">6.37814e6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     MARS    <span class="token punctuation">(</span><span class="token number">6.421e+23</span><span class="token punctuation">,</span> <span class="token number">3.3972e6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     JUPITER <span class="token punctuation">(</span><span class="token number">1.9e+27</span><span class="token punctuation">,</span>   <span class="token number">7.1492e7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     SATURN  <span class="token punctuation">(</span><span class="token number">5.688e+26</span><span class="token punctuation">,</span> <span class="token number">6.0268e7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     URANUS  <span class="token punctuation">(</span><span class="token number">8.686e+25</span><span class="token punctuation">,</span> <span class="token number">2.5559e7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     NEPTUNE <span class="token punctuation">(</span><span class="token number">1.024e+26</span><span class="token punctuation">,</span> <span class="token number">2.4746e7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> mass<span class="token punctuation">;</span>   <span class="token comment">// in kilograms </span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> radius<span class="token punctuation">;</span> <span class="token comment">// in meters </span>    <span class="token class-name">Planet</span><span class="token punctuation">(</span><span class="token keyword">double</span> mass<span class="token punctuation">,</span> <span class="token keyword">double</span> radius<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>mass <span class="token operator">=</span> mass<span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>radius <span class="token operator">=</span> radius<span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">private</span> <span class="token keyword">double</span> <span class="token function">mass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> mass<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>     <span class="token keyword">private</span> <span class="token keyword">double</span> <span class="token function">radius</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> radius<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>     <span class="token comment">// universal gravitational constant  (m3 kg-1 s-2) </span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token class-name">G</span> <span class="token operator">=</span> <span class="token number">6.67300E-11</span><span class="token punctuation">;</span>     <span class="token keyword">double</span> <span class="token function">surfaceGravity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> <span class="token class-name">G</span> <span class="token operator">*</span> mass <span class="token operator">/</span> <span class="token punctuation">(</span>radius <span class="token operator">*</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">double</span> <span class="token function">surfaceWeight</span><span class="token punctuation">(</span><span class="token keyword">double</span> otherMass<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> otherMass <span class="token operator">*</span> <span class="token function">surfaceGravity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Usage: java Planet &lt;earth_weight>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>         <span class="token keyword">double</span> earthWeight <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">double</span> mass <span class="token operator">=</span> earthWeight<span class="token operator">/</span>EARTH<span class="token punctuation">.</span><span class="token function">surfaceGravity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Planet</span> p <span class="token operator">:</span> <span class="token class-name">Planet</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Your weight on %s is %f%n"</span><span class="token punctuation">,</span>                              p<span class="token punctuation">,</span> p<span class="token punctuation">.</span><span class="token function">surfaceWeight</span><span class="token punctuation">(</span>mass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token class-name">If</span> you run <span class="token class-name">Planet</span><span class="token punctuation">.</span><span class="token keyword">class</span> from the command line <span class="token keyword">with</span> <span class="token namespace">an</span> argument of <span class="token number">175</span><span class="token punctuation">,</span> you get <span class="token keyword">this</span> output<span class="token operator">:</span> $ java <span class="token class-name">Planet</span> <span class="token number">175</span> <span class="token class-name">Your</span> weight on MERCURY is <span class="token number">66.107583</span> <span class="token class-name">Your</span> weight on VENUS is <span class="token number">158.374842</span> <span class="token class-name">Your</span> weight on EARTH is <span class="token number">175.000000</span> <span class="token class-name">Your</span> weight on MARS is <span class="token number">66.279007</span> <span class="token class-name">Your</span> weight on JUPITER is <span class="token number">442.847567</span> <span class="token class-name">Your</span> weight on SATURN is <span class="token number">186.552719</span> <span class="token class-name">Your</span> weight on URANUS is <span class="token number">158.397260</span> <span class="token class-name">Your</span> weight on NEPTUNE is <span class="token number">199.207413</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Java-使用-Enum-实现单例模式"><a href="#Java-使用-Enum-实现单例模式" class="headerlink" title="Java 使用 Enum 实现单例模式"></a>Java 使用 Enum 实现单例模式</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">SingletonEnum</span><span class="token punctuation">&#123;</span>INSTANCE<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">SingletonEnum</span> <span class="token punctuation">&#123;</span>INSTANCE<span class="token punctuation">;</span><span class="token keyword">int</span> value<span class="token punctuation">;</span><span class="token comment">// 这里我们可以自定义构造函数.</span><span class="token keyword">private</span> <span class="token class-name">SingletonEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"INSTANCE now created!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> value<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//调用</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"start get instance!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SingletonEnum</span> singleton <span class="token operator">=</span> <span class="token class-name">SingletonEnum</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>singleton<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>singleton<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>singleton<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//结果:</span>start get instance<span class="token operator">!</span>INSTANCE now created<span class="token operator">!</span><span class="token number">1</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的SingletonEnum的定义利用的enum是一种特殊的class.代码中的第一行INSTANCE会被编译器编译为SingletonEnum本身的一个对象.当第一次访问SingletonEnum.INSTANCE时会创建该对象,并且enum变量的创建是线程安全的.</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**  * 使用枚举的单例模式  *  * @author yzl  * @see [相关类/方法]（可选）  * @since [产品/模块版本] （可选）  */</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EnumSingleton</span><span class="token punctuation">&#123;</span>     <span class="token keyword">private</span> <span class="token class-name">EnumSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">EnumSingleton</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> <span class="token class-name">Singleton</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>          <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">enum</span> <span class="token class-name">Singleton</span><span class="token punctuation">&#123;</span>         INSTANCE<span class="token punctuation">;</span>                  <span class="token keyword">private</span> <span class="token class-name">EnumSingleton</span> singleton<span class="token punctuation">;</span>         <span class="token comment">//JVM会保证此方法绝对只调用一次 </span>        <span class="token keyword">private</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             singleton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EnumSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token class-name">EnumSingleton</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token keyword">return</span> singleton<span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Enums&quot;&gt;&lt;a href=&quot;#Enums&quot; class=&quot;headerlink&quot; title=&quot;Enums&quot;&gt;&lt;/a&gt;Enums&lt;/h1&gt;&lt;h2 id=&quot;Enums-概念&quot;&gt;&lt;a href=&quot;#Enums-概念&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
    <category term="Java" scheme="http://wangzt568.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wangzt568.github.io/2021/02/14/hello-world/"/>
    <id>http://wangzt568.github.io/2021/02/14/hello-world/</id>
    <published>2021-02-14T18:15:41.731Z</published>
    <updated>2021-02-14T18:15:41.731Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a class=&quot;link&quot;   href=&quot;https://hexo.io/&quot; &gt;Hexo&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;! This is your very first post. Che</summary>
      
    
    
    
    
  </entry>
  
</feed>
